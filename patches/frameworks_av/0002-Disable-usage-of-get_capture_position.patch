From 56e718ee9be46e607b0ecd668e92e028c7a5fe0e Mon Sep 17 00:00:00 2001
From: Dmitry Smirnov <divis1969@gmail.com>
Date: Fri, 4 Nov 2016 22:26:52 +0300
Subject: [PATCH 2/4] Disable usage of get_capture_position

'get_capture_position' is a newly introduced API that is not yet
supported by Meizu audio HAL (as of 4.5.4I stock image), so
we disable its usage to avoid crash

Change-Id: Ieab4a8bf98011d72d913e8895ec88a05bb19908b
(cherry picked from commit 8f54bb472cb53719d3820da9cb568c09f159c27c)
---
 services/audioflinger/Threads.cpp | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/services/audioflinger/Threads.cpp b/services/audioflinger/Threads.cpp
index e8c80c1..574491d 100644
--- a/services/audioflinger/Threads.cpp
+++ b/services/audioflinger/Threads.cpp
@@ -6463,20 +6463,20 @@ reacquire_wakelock:
         mTimestamp.mTimeNs[ExtendedTimestamp::LOCATION_SERVER] = systemTime();
 
         // Update server timestamp with kernel stats
-        if (mInput->stream->get_capture_position != nullptr
-                && mPipeSource.get() == nullptr /* don't obtain for FastCapture, could block */) {
-            int64_t position, time;
-            int ret = mInput->stream->get_capture_position(mInput->stream, &position, &time);
-            if (ret == NO_ERROR) {
-                mTimestamp.mPosition[ExtendedTimestamp::LOCATION_KERNEL] = position;
-                mTimestamp.mTimeNs[ExtendedTimestamp::LOCATION_KERNEL] = time;
-                // Note: In general record buffers should tend to be empty in
-                // a properly running pipeline.
-                //
-                // Also, it is not advantageous to call get_presentation_position during the read
-                // as the read obtains a lock, preventing the timestamp call from executing.
-            }
-        }
+//        if (mInput->stream->get_capture_position != nullptr
+//                && mPipeSource.get() == nullptr /* don't obtain for FastCapture, could block */) {
+//           int64_t position, time;
+//            int ret = mInput->stream->get_capture_position(mInput->stream, &position, &time);
+//            if (ret == NO_ERROR) {
+//                mTimestamp.mPosition[ExtendedTimestamp::LOCATION_KERNEL] = position;
+//                mTimestamp.mTimeNs[ExtendedTimestamp::LOCATION_KERNEL] = time;
+//                // Note: In general record buffers should tend to be empty in
+//                // a properly running pipeline.
+//                //
+//                // Also, it is not advantageous to call get_presentation_position during the read
+//                // as the read obtains a lock, preventing the timestamp call from executing.
+//            }
+//        }
         // Use this to track timestamp information
         // ALOGD("%s", mTimestamp.toString().c_str());
 
-- 
2.14.1

